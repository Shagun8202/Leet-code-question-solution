class Solution {
public:
set<vector<int>>ans;

void backtrack(vector<int>&nums,int idx,vector<int> temp){
    if(idx ==nums.size()){
        if(temp.size()>1){
            ans.insert(temp);
        }
        return;
    }
    int curr =nums[idx],prev=temp.size() == 0 ? -101 :temp[temp.size()-1];
    if(curr>=prev){
        temp.push_back(curr);
        backtrack(nums,idx+1,temp);
        temp.pop_back();
        backtrack(nums,idx+1,temp);
    }
    else{
        backtrack(nums,idx+1,temp);
    }
    return; 
} 
    vector<vector<int>> findSubsequences(vector<int>& nums) {
        vector<int>temp;
        backtrack(nums,0,temp);
        vector<vector<int>>res;
        for(auto it:ans){
            res.push_back(it);
        }
        return res;

    }
};
