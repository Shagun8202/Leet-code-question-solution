class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
      int n = mat.size();
      int m = mat[0].size();
      vector<vector<int>> vis(n,vector<int>(m,0));
      vector<vector<int>> ans(n,vector<int>(m,0));
      queue<pair<pair<int,int>,int>> q;
      for(int i = 0;i<n;i++){
          for(int j = 0;j<m;j++){
              if(mat[i][j]==0){
                  vis[i][j]=1;
                  q.push({{i,j},0});
              }
              else{
                  vis[i][j]=0;
              }
          }
      }
      int mov1[] = {-1,0,+1,0};
      int mov2[]={0,+1,0,-1};
      
      while(!q.empty()){
          int ind1 = q.front().first.first;
          int ind2=q.front().first.second;
          int steps = q.front().second;
          ans[ind1][ind2]=steps;
          q.pop();
          for(int i =0;i<4;i++){
              int nrow = ind1+mov1[i];
              int ncol = ind2+mov2[i];
              
              if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && vis[nrow][ncol]==0 ){
                  vis[nrow][ncol]=1;
                  q.push({{nrow,ncol},steps+1});
              }
          }

      }
  return ans;
    }
};
